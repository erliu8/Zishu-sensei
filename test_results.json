{"created": 1760694987.035151, "duration": 109.97417187690735, "exitcode": 2, "root": "/opt/zishu-sensei/tests", "environment": {}, "summary": {"total": 0, "collected": 598}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Package"}]}, {"nodeid": "docs", "outcome": "passed", "result": []}, {"nodeid": "integration/test_api_integration.py::TestAPIIntegrationSetup", "outcome": "passed", "result": []}, {"nodeid": "integration/test_api_integration.py::TestHealthIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestHealthIntegration::test_health_endpoint_basic", "type": "Function", "lineno": 145}, {"nodeid": "integration/test_api_integration.py::TestHealthIntegration::test_health_endpoint_with_cors", "type": "Function", "lineno": 153}, {"nodeid": "integration/test_api_integration.py::TestHealthIntegration::test_health_endpoint_async", "type": "Coroutine", "lineno": 164}, {"nodeid": "integration/test_api_integration.py::TestHealthIntegration::test_health_endpoint_performance", "type": "Function", "lineno": 173}]}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestChatIntegration::test_chat_completions_basic", "type": "Function", "lineno": 194}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration::test_chat_completions_with_history", "type": "Function", "lineno": 212}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration::test_chat_completions_invalid_request", "type": "Function", "lineno": 230}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration::test_chat_completions_empty_messages", "type": "Function", "lineno": 242}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration::test_chat_completions_async", "type": "Coroutine", "lineno": 254}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration::test_chat_completions_concurrent", "type": "Function", "lineno": 268}]}, {"nodeid": "integration/test_api_integration.py::TestModelManagementIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestModelManagementIntegration::test_list_adapters_endpoint", "type": "Function", "lineno": 297}, {"nodeid": "integration/test_api_integration.py::TestModelManagementIntegration::test_model_status_endpoint", "type": "Function", "lineno": 311}, {"nodeid": "integration/test_api_integration.py::TestModelManagementIntegration::test_load_adapter_endpoint", "type": "Function", "lineno": 322}]}, {"nodeid": "integration/test_api_integration.py::TestAPIWorkflow", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestAPIWorkflow::test_complete_chat_workflow", "type": "Function", "lineno": 344}, {"nodeid": "integration/test_api_integration.py::TestAPIWorkflow::test_error_handling_workflow", "type": "Function", "lineno": 375}, {"nodeid": "integration/test_api_integration.py::TestAPIWorkflow::test_async_workflow", "type": "Coroutine", "lineno": 400}]}, {"nodeid": "integration/test_api_integration.py::TestAPISecurityIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestAPISecurityIntegration::test_cors_headers", "type": "Function", "lineno": 439}, {"nodeid": "integration/test_api_integration.py::TestAPISecurityIntegration::test_security_headers", "type": "Function", "lineno": 456}, {"nodeid": "integration/test_api_integration.py::TestAPISecurityIntegration::test_request_size_limits", "type": "Function", "lineno": 472}, {"nodeid": "integration/test_api_integration.py::TestAPISecurityIntegration::test_rate_limiting", "type": "Function", "lineno": 486}]}, {"nodeid": "integration/test_api_integration.py::TestAPIPerformanceIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestAPIPerformanceIntegration::test_response_time_performance", "type": "Function", "lineno": 507}, {"nodeid": "integration/test_api_integration.py::TestAPIPerformanceIntegration::test_concurrent_performance", "type": "Function", "lineno": 530}, {"nodeid": "integration/test_api_integration.py::TestAPIPerformanceIntegration::test_memory_usage_stability", "type": "Function", "lineno": 554}]}, {"nodeid": "integration/test_api_integration.py::TestAPIDataConsistency", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestAPIDataConsistency::test_response_format_consistency", "type": "Function", "lineno": 588}, {"nodeid": "integration/test_api_integration.py::TestAPIDataConsistency::test_error_format_consistency", "type": "Function", "lineno": 618}]}, {"nodeid": "integration/test_api_integration.py", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py::TestAPIIntegrationSetup", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestHealthIntegration", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestChatIntegration", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestModelManagementIntegration", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestAPIWorkflow", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestAPISecurityIntegration", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestAPIPerformanceIntegration", "type": "Class"}, {"nodeid": "integration/test_api_integration.py::TestAPIDataConsistency", "type": "Class"}]}, {"nodeid": "integration/test_full_system_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/integration/test_full_system_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/integration/test_full_system_integration.py:21: in <module>\n    from zishu.core.registry import ServiceRegistry, RegistryConfig\nE   ModuleNotFoundError: No module named 'zishu.core.registry'"}, {"nodeid": "integration/test_lifecycle_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/integration/test_lifecycle_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/integration/test_lifecycle_integration.py:19: in <module>\n    from zishu.core.lifecycle import LifecycleManager, LifecycleConfig, LifecyclePhase\nE   ModuleNotFoundError: No module named 'zishu.core.lifecycle'"}, {"nodeid": "integration/test_metrics_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/integration/test_metrics_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/integration/test_metrics_integration.py:17: in <module>\n    from zishu.metrics.manager import MetricsManager, MetricsConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "integration/test_microservice_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/integration/test_microservice_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/integration/test_microservice_integration.py:17: in <module>\n    from zishu.core.microservice import MicroserviceManager, MicroserviceConfig\nE   ModuleNotFoundError: No module named 'zishu.core.microservice'"}, {"nodeid": "integration/test_security_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/integration/test_security_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/integration/test_security_integration.py:13: in <module>\n    import jwt\nE   ModuleNotFoundError: No module named 'jwt'"}, {"nodeid": "integration/test_storage_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/integration/test_storage_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/integration/test_storage_integration.py:17: in <module>\n    from zishu.storage.manager import StorageManager, StorageManagerConfig\nE   ModuleNotFoundError: No module named 'zishu.storage'"}, {"nodeid": "integration", "outcome": "passed", "result": [{"nodeid": "integration/test_api_integration.py", "type": "Module"}, {"nodeid": "integration/test_full_system_integration.py", "type": "Module"}, {"nodeid": "integration/test_lifecycle_integration.py", "type": "Module"}, {"nodeid": "integration/test_metrics_integration.py", "type": "Module"}, {"nodeid": "integration/test_microservice_integration.py", "type": "Module"}, {"nodeid": "integration/test_security_integration.py", "type": "Module"}, {"nodeid": "integration/test_storage_integration.py", "type": "Module"}]}, {"nodeid": "performance/test_adapter_benchmarks.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/performance/test_adapter_benchmarks.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/performance/test_adapter_benchmarks.py:26: in <module>\n    from tests.unit.adapters.test_soft_adapter import MockAdapterA, MockAdapterB, MockAdapterC\nE   ImportError: cannot import name 'MockAdapterA' from 'tests.unit.adapters.test_soft_adapter' (/opt/zishu-sensei/tests/unit/adapters/test_soft_adapter.py)"}, {"nodeid": "performance/test_api_performance.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "performance/test_api_performance.py::TestAPIPerformanceSetup", "outcome": "passed", "result": []}, {"nodeid": "performance/test_api_performance.py::TestBasicPerformance", "outcome": "passed", "result": [{"nodeid": "performance/test_api_performance.py::TestBasicPerformance::test_health_check_performance", "type": "Function", "lineno": 133}, {"nodeid": "performance/test_api_performance.py::TestBasicPerformance::test_chat_completion_performance", "type": "Function", "lineno": 178}]}, {"nodeid": "performance/test_api_performance.py::TestConcurrencyPerformance", "outcome": "passed", "result": [{"nodeid": "performance/test_api_performance.py::TestConcurrencyPerformance::test_concurrent_health_checks", "type": "Function", "lineno": 237}, {"nodeid": "performance/test_api_performance.py::TestConcurrencyPerformance::test_concurrent_chat_completions", "type": "Function", "lineno": 288}, {"nodeid": "performance/test_api_performance.py::TestConcurrencyPerformance::test_async_concurrent_performance", "type": "Coroutine", "lineno": 343}]}, {"nodeid": "performance/test_api_performance.py::TestLoadTesting", "outcome": "passed", "result": [{"nodeid": "performance/test_api_performance.py::TestLoadTesting::test_sustained_load", "type": "Function", "lineno": 396}, {"nodeid": "performance/test_api_performance.py::TestLoadTesting::test_spike_load", "type": "Function", "lineno": 468}]}, {"nodeid": "performance/test_api_performance.py::TestMemoryPerformance", "outcome": "passed", "result": [{"nodeid": "performance/test_api_performance.py::TestMemoryPerformance::test_memory_leak_detection", "type": "Function", "lineno": 578}, {"nodeid": "performance/test_api_performance.py::TestMemoryPerformance::test_large_request_memory_handling", "type": "Function", "lineno": 623}]}, {"nodeid": "performance/test_api_performance.py::TestStreamingPerformance", "outcome": "passed", "result": [{"nodeid": "performance/test_api_performance.py::TestStreamingPerformance::test_streaming_response_performance", "type": "Function", "lineno": 679}]}, {"nodeid": "performance/test_api_performance.py", "outcome": "passed", "result": [{"nodeid": "performance/test_api_performance.py::TestClient", "type": "Class"}, {"nodeid": "performance/test_api_performance.py::TestAPIPerformanceSetup", "type": "Class"}, {"nodeid": "performance/test_api_performance.py::TestBasicPerformance", "type": "Class"}, {"nodeid": "performance/test_api_performance.py::TestConcurrencyPerformance", "type": "Class"}, {"nodeid": "performance/test_api_performance.py::TestLoadTesting", "type": "Class"}, {"nodeid": "performance/test_api_performance.py::TestMemoryPerformance", "type": "Class"}, {"nodeid": "performance/test_api_performance.py::TestStreamingPerformance", "type": "Class"}]}, {"nodeid": "performance", "outcome": "passed", "result": [{"nodeid": "performance/test_adapter_benchmarks.py", "type": "Module"}, {"nodeid": "performance/test_api_performance.py", "type": "Module"}]}, {"nodeid": "reports/20251002_132203/coverage", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_132203/html", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_132203/json", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_132203/junit", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_132203", "outcome": "passed", "result": [{"nodeid": "reports/20251002_132203/coverage", "type": "Dir"}, {"nodeid": "reports/20251002_132203/html", "type": "Dir"}, {"nodeid": "reports/20251002_132203/json", "type": "Dir"}, {"nodeid": "reports/20251002_132203/junit", "type": "Dir"}]}, {"nodeid": "reports/20251002_133348/coverage", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133348/html", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133348/json", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133348/junit", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133348", "outcome": "passed", "result": [{"nodeid": "reports/20251002_133348/coverage", "type": "Dir"}, {"nodeid": "reports/20251002_133348/html", "type": "Dir"}, {"nodeid": "reports/20251002_133348/json", "type": "Dir"}, {"nodeid": "reports/20251002_133348/junit", "type": "Dir"}]}, {"nodeid": "reports/20251002_133846/coverage", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133846/html", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133846/json", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133846/junit", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_133846", "outcome": "passed", "result": [{"nodeid": "reports/20251002_133846/coverage", "type": "Dir"}, {"nodeid": "reports/20251002_133846/html", "type": "Dir"}, {"nodeid": "reports/20251002_133846/json", "type": "Dir"}, {"nodeid": "reports/20251002_133846/junit", "type": "Dir"}]}, {"nodeid": "reports/20251002_134137/coverage", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_134137/html", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_134137/json", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_134137/junit", "outcome": "passed", "result": []}, {"nodeid": "reports/20251002_134137", "outcome": "passed", "result": [{"nodeid": "reports/20251002_134137/coverage", "type": "Dir"}, {"nodeid": "reports/20251002_134137/html", "type": "Dir"}, {"nodeid": "reports/20251002_134137/json", "type": "Dir"}, {"nodeid": "reports/20251002_134137/junit", "type": "Dir"}]}, {"nodeid": "reports/latest/coverage", "outcome": "passed", "result": []}, {"nodeid": "reports/latest/html", "outcome": "passed", "result": []}, {"nodeid": "reports/latest/json", "outcome": "passed", "result": []}, {"nodeid": "reports/latest/junit", "outcome": "passed", "result": []}, {"nodeid": "reports/latest", "outcome": "passed", "result": [{"nodeid": "reports/latest/coverage", "type": "Dir"}, {"nodeid": "reports/latest/html", "type": "Dir"}, {"nodeid": "reports/latest/json", "type": "Dir"}, {"nodeid": "reports/latest/junit", "type": "Dir"}]}, {"nodeid": "reports", "outcome": "passed", "result": [{"nodeid": "reports/20251002_132203", "type": "Dir"}, {"nodeid": "reports/20251002_133348", "type": "Dir"}, {"nodeid": "reports/20251002_133846", "type": "Dir"}, {"nodeid": "reports/20251002_134137", "type": "Dir"}, {"nodeid": "reports/latest", "type": "Dir"}]}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_chain_initialization", "type": "Coroutine", "lineno": 231}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_sequential_execution", "type": "Coroutine", "lineno": 242}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_parallel_execution", "type": "Coroutine", "lineno": 279}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_error_handling_stop_on_error", "type": "Coroutine", "lineno": 313}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_error_handling_continue_on_error", "type": "Coroutine", "lineno": 335}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_chain_health_check", "type": "Coroutine", "lineno": 360}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain::test_chain_metrics", "type": "Coroutine", "lineno": 373}]}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline::test_pipeline_initialization", "type": "Coroutine", "lineno": 424}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline::test_stage_configuration", "type": "Coroutine", "lineno": 435}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline::test_batch_processing", "type": "Coroutine", "lineno": 450}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline::test_streaming_processing", "type": "Coroutine", "lineno": 473}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline::test_pipeline_backpressure", "type": "Coroutine", "lineno": 500}]}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterComposer", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterComposer::test_compose_linear_chain", "type": "Coroutine", "lineno": 549}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterComposer::test_compose_parallel_group", "type": "Coroutine", "lineno": 563}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterComposer::test_compose_conditional_chain", "type": "Coroutine", "lineno": 576}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterComposer::test_compose_feedback_loop", "type": "Coroutine", "lineno": 607}]}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionStrategies", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionStrategies::test_fan_out_fan_in_pattern", "type": "Coroutine", "lineno": 644}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionStrategies::test_scatter_gather_pattern", "type": "Coroutine", "lineno": 666}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionStrategies::test_circuit_breaker_pattern", "type": "Coroutine", "lineno": 687}]}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionPerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionPerformance::test_chain_execution_performance", "type": "Coroutine", "lineno": 731}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionPerformance::test_parallel_vs_sequential_performance", "type": "Coroutine", "lineno": 756}]}, {"nodeid": "unit/adapters/test_adapter_composition.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterChain", "type": "Class"}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterPipeline", "type": "Class"}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestAdapterComposer", "type": "Class"}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionStrategies", "type": "Class"}, {"nodeid": "unit/adapters/test_adapter_composition.py::TestCompositionPerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_manager_initialization", "type": "Coroutine", "lineno": 110}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_register_adapter", "type": "Coroutine", "lineno": 133}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_unregister_adapter", "type": "Coroutine", "lineno": 149}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_start_adapter", "type": "Coroutine", "lineno": 165}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_stop_adapter", "type": "Coroutine", "lineno": 179}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_process_with_adapter", "type": "Coroutine", "lineno": 195}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_batch_process_with_adapter", "type": "Coroutine", "lineno": 215}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_get_adapter_info", "type": "Coroutine", "lineno": 235}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_list_adapters_by_type", "type": "Coroutine", "lineno": 250}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_find_adapters_by_capability", "type": "Coroutine", "lineno": 277}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_health_check_adapter", "type": "Coroutine", "lineno": 300}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_health_check_all_adapters", "type": "Coroutine", "lineno": 316}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_get_adapter_metrics", "type": "Coroutine", "lineno": 337}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_get_system_metrics", "type": "Coroutine", "lineno": 359}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_concurrent_adapter_operations", "type": "Coroutine", "lineno": 375}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_adapter_lifecycle_events", "type": "Coroutine", "lineno": 407}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_security_validation", "type": "Coroutine", "lineno": 429}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_dependency_resolution", "type": "Coroutine", "lineno": 445}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_error_handling", "type": "Coroutine", "lineno": 473}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_resource_management", "type": "Coroutine", "lineno": 493}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_configuration_update", "type": "Coroutine", "lineno": 508}, {"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager::test_manager_shutdown_cleanup", "type": "Coroutine", "lineno": 528}]}, {"nodeid": "unit/adapters/test_adapter_manager.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_manager.py::TestAdapterManager", "type": "Class"}]}, {"nodeid": "unit/adapters/test_event_service.py::TestEventHandler", "outcome": "passed", "result": []}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_service_initialization", "type": "Coroutine", "lineno": 82}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_subscribe_and_emit_event", "type": "Coroutine", "lineno": 104}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_multiple_subscribers", "type": "Coroutine", "lineno": 130}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_unsubscribe", "type": "Coroutine", "lineno": 154}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_event_filtering", "type": "Coroutine", "lineno": 184}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_event_priority_handling", "type": "Coroutine", "lineno": 224}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_async_event_delivery", "type": "Coroutine", "lineno": 262}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_sync_event_delivery", "type": "Coroutine", "lineno": 284}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_multiple_event_processing", "type": "Coroutine", "lineno": 303}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_event_handler_failure", "type": "Coroutine", "lineno": 333}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_event_metrics_collection", "type": "Coroutine", "lineno": 355}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_subscription_management", "type": "Coroutine", "lineno": 381}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_wildcard_subscription", "type": "Coroutine", "lineno": 402}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_logging_event_handler", "type": "Coroutine", "lineno": 430}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_metrics_event_handler", "type": "Coroutine", "lineno": 459}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_filter_event_handler", "type": "Coroutine", "lineno": 486}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_concurrent_event_processing", "type": "Coroutine", "lineno": 526}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_health_check", "type": "Coroutine", "lineno": 561}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_service_metrics", "type": "Coroutine", "lineno": 571}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService::test_error_handling", "type": "Coroutine", "lineno": 589}]}, {"nodeid": "unit/adapters/test_event_service.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_event_service.py::TestEventHandler", "type": "Class"}, {"nodeid": "unit/adapters/test_event_service.py::TestAdapterEventService", "type": "Class"}]}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_adapter_initialization", "type": "Coroutine", "lineno": 99}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_file_system_operations", "type": "Coroutine", "lineno": 113}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_system_info_operations", "type": "Coroutine", "lineno": 122}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_process_management", "type": "Coroutine", "lineno": 132}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_security_validation", "type": "Coroutine", "lineno": 153}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_resource_monitoring", "type": "Coroutine", "lineno": 162}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_sandbox_enforcement", "type": "Coroutine", "lineno": 172}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_concurrent_operations", "type": "Coroutine", "lineno": 182}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_health_check", "type": "Coroutine", "lineno": 191}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter::test_error_recovery", "type": "Coroutine", "lineno": 205}]}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestResourceMonitor", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_hard_adapter.py::TestResourceMonitor::test_cpu_monitoring", "type": "Function", "lineno": 223}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestResourceMonitor::test_memory_monitoring", "type": "Function", "lineno": 229}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestResourceMonitor::test_disk_monitoring", "type": "Function", "lineno": 235}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestResourceMonitor::test_resource_limits_check", "type": "Function", "lineno": 241}]}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestProcessManager", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_hard_adapter.py::TestProcessManager::test_list_processes", "type": "Function", "lineno": 262}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestProcessManager::test_get_process_info", "type": "Function", "lineno": 277}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestProcessManager::test_execute_command_safe", "type": "Coroutine", "lineno": 294}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestProcessManager::test_execute_command_timeout", "type": "Coroutine", "lineno": 312}]}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestFileSystemOperations", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_hard_adapter.py::TestFileSystemOperations::test_safe_file_read", "type": "Coroutine", "lineno": 354}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestFileSystemOperations::test_safe_file_write", "type": "Coroutine", "lineno": 367}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestFileSystemOperations::test_path_validation", "type": "Function", "lineno": 379}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestFileSystemOperations::test_directory_operations", "type": "Coroutine", "lineno": 396}]}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapterPerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapterPerformance::test_file_operation_performance", "type": "Coroutine", "lineno": 425}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapterPerformance::test_system_monitoring_performance", "type": "Coroutine", "lineno": 438}]}, {"nodeid": "unit/adapters/test_hard_adapter.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapter", "type": "Class"}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestResourceMonitor", "type": "Class"}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestProcessManager", "type": "Class"}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestFileSystemOperations", "type": "Class"}, {"nodeid": "unit/adapters/test_hard_adapter.py::TestHardAdapterPerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_service_initialization", "type": "Coroutine", "lineno": 114}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_register_adapter_for_monitoring", "type": "Coroutine", "lineno": 139}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_unregister_adapter", "type": "Coroutine", "lineno": 151}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_check_adapter_health", "type": "Coroutine", "lineno": 167}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_check_all_adapters_health", "type": "Coroutine", "lineno": 184}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_monitoring_task", "type": "Coroutine", "lineno": 223}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_unhealthy_adapter_detection", "type": "Coroutine", "lineno": 268}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_metrics_collection", "type": "Coroutine", "lineno": 299}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_threshold_monitoring", "type": "Coroutine", "lineno": 321}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_auto_recovery", "type": "Coroutine", "lineno": 338}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_history_tracking", "type": "Coroutine", "lineno": 404}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_service_metrics", "type": "Coroutine", "lineno": 427}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_check_timeout", "type": "Coroutine", "lineno": 444}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_concurrent_health_checks", "type": "Coroutine", "lineno": 469}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_health_service_health_check", "type": "Coroutine", "lineno": 510}, {"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService::test_error_handling", "type": "Coroutine", "lineno": 520}]}, {"nodeid": "unit/adapters/test_health_service.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_health_service.py::TestAdapterHealthService", "type": "Class"}]}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_adapter_initialization", "type": "Coroutine", "lineno": 121}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_code_generation", "type": "Coroutine", "lineno": 139}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_code_execution", "type": "Coroutine", "lineno": 161}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_code_generation_and_execution", "type": "Coroutine", "lineno": 184}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_learning_feedback", "type": "Coroutine", "lineno": 214}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_code_optimization", "type": "Coroutine", "lineno": 237}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_error_handling_in_code_execution", "type": "Coroutine", "lineno": 266}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_security_validation", "type": "Coroutine", "lineno": 295}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_concurrent_code_generation", "type": "Coroutine", "lineno": 324}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter::test_health_check", "type": "Coroutine", "lineno": 349}]}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestCodeGenerator", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_intelligent_adapter.py::TestCodeGenerator::test_simple_code_generation", "type": "Coroutine", "lineno": 377}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestCodeGenerator::test_code_validation", "type": "Coroutine", "lineno": 403}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestCodeGenerator::test_code_formatting", "type": "Coroutine", "lineno": 414}]}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestSafeExecutor", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_intelligent_adapter.py::TestSafeExecutor::test_safe_code_execution", "type": "Coroutine", "lineno": 442}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestSafeExecutor::test_blocked_module_execution", "type": "Coroutine", "lineno": 464}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestSafeExecutor::test_timeout_handling", "type": "Coroutine", "lineno": 487}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestSafeExecutor::test_code_analysis", "type": "Function", "lineno": 509}]}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestLearningEngine", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_intelligent_adapter.py::TestLearningEngine::test_record_feedback", "type": "Coroutine", "lineno": 536}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestLearningEngine::test_get_performance_metrics", "type": "Coroutine", "lineno": 555}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestLearningEngine::test_get_suggestions", "type": "Coroutine", "lineno": 576}]}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapterPerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapterPerformance::test_code_generation_performance", "type": "Coroutine", "lineno": 660}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapterPerformance::test_execution_performance", "type": "Coroutine", "lineno": 683}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapterPerformance::test_memory_usage", "type": "Coroutine", "lineno": 706}]}, {"nodeid": "unit/adapters/test_intelligent_adapter.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapter", "type": "Class"}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestCodeGenerator", "type": "Class"}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestSafeExecutor", "type": "Class"}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestLearningEngine", "type": "Class"}, {"nodeid": "unit/adapters/test_intelligent_adapter.py::TestIntelligentAdapterPerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_adapter_initialization", "type": "Coroutine", "lineno": 145}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_single_modality_processing", "type": "Coroutine", "lineno": 159}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_multimodal_processing", "type": "Coroutine", "lineno": 185}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_three_modality_processing", "type": "Coroutine", "lineno": 221}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_modality_validation", "type": "Coroutine", "lineno": 260}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_fusion_strategies", "type": "Coroutine", "lineno": 283}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_late_fusion_strategy", "type": "Coroutine", "lineno": 305}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_cross_modal_attention", "type": "Coroutine", "lineno": 336}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_modality_alignment", "type": "Coroutine", "lineno": 370}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_missing_modality_handling", "type": "Coroutine", "lineno": 397}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_batch_multimodal_processing", "type": "Coroutine", "lineno": 420}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter::test_health_check", "type": "Coroutine", "lineno": 449}]}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityProcessors", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityProcessors::test_text_processor", "type": "Coroutine", "lineno": 467}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityProcessors::test_image_processor", "type": "Coroutine", "lineno": 488}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityProcessors::test_audio_processor", "type": "Coroutine", "lineno": 511}]}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityFusion", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityFusion::test_attention_fusion", "type": "Coroutine", "lineno": 553}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityFusion::test_concatenation_fusion", "type": "Coroutine", "lineno": 572}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityFusion::test_weighted_fusion", "type": "Coroutine", "lineno": 590}]}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_adapter_initialization", "type": "Coroutine", "lineno": 145}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_single_modality_processing", "type": "Coroutine", "lineno": 159}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_multimodal_processing", "type": "Coroutine", "lineno": 185}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_three_modality_processing", "type": "Coroutine", "lineno": 221}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_modality_validation", "type": "Coroutine", "lineno": 260}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_fusion_strategies", "type": "Coroutine", "lineno": 283}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_late_fusion_strategy", "type": "Coroutine", "lineno": 305}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_cross_modal_attention", "type": "Coroutine", "lineno": 336}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_modality_alignment", "type": "Coroutine", "lineno": 370}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_missing_modality_handling", "type": "Coroutine", "lineno": 397}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_batch_multimodal_processing", "type": "Coroutine", "lineno": 420}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_health_check", "type": "Coroutine", "lineno": 449}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_multimodal_processing_performance", "type": "Coroutine", "lineno": 633}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance::test_concurrent_multimodal_processing", "type": "Coroutine", "lineno": 662}]}, {"nodeid": "unit/adapters/test_multimodal_adapter.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalAdapter", "type": "Class"}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityProcessors", "type": "Class"}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestModalityFusion", "type": "Class"}, {"nodeid": "unit/adapters/test_multimodal_adapter.py::TestMultimodalPerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_engine_initialization", "type": "Coroutine", "lineno": 89}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_simple_template_rendering", "type": "Coroutine", "lineno": 101}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_complex_template_rendering", "type": "Coroutine", "lineno": 116}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_template_loading_from_file", "type": "Coroutine", "lineno": 141}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_template_validation", "type": "Coroutine", "lineno": 156}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_template_caching", "type": "Coroutine", "lineno": 172}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_variable_validation", "type": "Coroutine", "lineno": 200}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_template_optimization", "type": "Coroutine", "lineno": 218}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_conditional_rendering", "type": "Coroutine", "lineno": 242}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_loop_rendering", "type": "Coroutine", "lineno": 273}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_nested_variables", "type": "Coroutine", "lineno": 301}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine::test_concurrent_rendering", "type": "Coroutine", "lineno": 324}]}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptTemplate", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptTemplate::test_template_creation", "type": "Function", "lineno": 349}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptTemplate::test_template_metadata", "type": "Function", "lineno": 363}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptTemplate::test_template_validation_rules", "type": "Function", "lineno": 379}]}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptValidator", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptValidator::test_syntax_validation", "type": "Function", "lineno": 410}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptValidator::test_variable_extraction", "type": "Function", "lineno": 422}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptValidator::test_security_validation", "type": "Function", "lineno": 432}]}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptCache", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptCache::test_cache_operations", "type": "Coroutine", "lineno": 453}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptCache::test_cache_expiration", "type": "Coroutine", "lineno": 473}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptCache::test_cache_size_limit", "type": "Coroutine", "lineno": 492}]}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptOptimizer", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptOptimizer::test_whitespace_optimization", "type": "Function", "lineno": 516}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptOptimizer::test_variable_optimization", "type": "Function", "lineno": 535}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptOptimizer::test_performance_optimization", "type": "Function", "lineno": 547}]}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEnginePerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEnginePerformance::test_rendering_performance", "type": "Coroutine", "lineno": 586}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEnginePerformance::test_concurrent_rendering_performance", "type": "Coroutine", "lineno": 613}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEnginePerformance::test_memory_usage", "type": "Coroutine", "lineno": 638}]}, {"nodeid": "unit/adapters/test_prompt_engine.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEngine", "type": "Class"}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptTemplate", "type": "Class"}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptValidator", "type": "Class"}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptCache", "type": "Class"}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptOptimizer", "type": "Class"}, {"nodeid": "unit/adapters/test_prompt_engine.py::TestPromptEnginePerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_engine_initialization", "type": "Coroutine", "lineno": 106}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_add_document", "type": "Coroutine", "lineno": 118}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_add_documents_batch", "type": "Coroutine", "lineno": 142}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_search_documents", "type": "Coroutine", "lineno": 161}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_search_with_filters", "type": "Coroutine", "lineno": 179}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_reranking", "type": "Coroutine", "lineno": 197}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_semantic_search", "type": "Coroutine", "lineno": 222}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_hybrid_search", "type": "Coroutine", "lineno": 245}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_document_update", "type": "Coroutine", "lineno": 274}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_document_deletion", "type": "Coroutine", "lineno": 291}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_get_similar_documents", "type": "Coroutine", "lineno": 307}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine::test_statistics", "type": "Coroutine", "lineno": 322}]}, {"nodeid": "unit/adapters/test_rag_engine.py::TestDocumentStore", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestDocumentStore::test_add_and_get_document", "type": "Coroutine", "lineno": 346}, {"nodeid": "unit/adapters/test_rag_engine.py::TestDocumentStore::test_document_search_by_metadata", "type": "Coroutine", "lineno": 364}, {"nodeid": "unit/adapters/test_rag_engine.py::TestDocumentStore::test_document_deletion", "type": "Coroutine", "lineno": 388}]}, {"nodeid": "unit/adapters/test_rag_engine.py::TestVectorStore", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestVectorStore::test_add_and_search_vectors", "type": "Coroutine", "lineno": 417}, {"nodeid": "unit/adapters/test_rag_engine.py::TestVectorStore::test_vector_similarity_calculation", "type": "Coroutine", "lineno": 440}, {"nodeid": "unit/adapters/test_rag_engine.py::TestVectorStore::test_vector_filtering", "type": "Coroutine", "lineno": 463}]}, {"nodeid": "unit/adapters/test_rag_engine.py::TestEmbeddingService", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestEmbeddingService::test_single_text_encoding", "type": "Coroutine", "lineno": 498}, {"nodeid": "unit/adapters/test_rag_engine.py::TestEmbeddingService::test_batch_encoding", "type": "Coroutine", "lineno": 509}, {"nodeid": "unit/adapters/test_rag_engine.py::TestEmbeddingService::test_encoding_consistency", "type": "Coroutine", "lineno": 527}]}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRetrievalService", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestRetrievalService::test_query_processing", "type": "Coroutine", "lineno": 549}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRetrievalService::test_result_filtering", "type": "Coroutine", "lineno": 559}]}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEnginePerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEnginePerformance::test_document_indexing_performance", "type": "Coroutine", "lineno": 585}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEnginePerformance::test_search_performance", "type": "Coroutine", "lineno": 612}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEnginePerformance::test_concurrent_search_performance", "type": "Coroutine", "lineno": 639}]}, {"nodeid": "unit/adapters/test_rag_engine.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEngine", "type": "Class"}, {"nodeid": "unit/adapters/test_rag_engine.py::TestDocumentStore", "type": "Class"}, {"nodeid": "unit/adapters/test_rag_engine.py::TestVectorStore", "type": "Class"}, {"nodeid": "unit/adapters/test_rag_engine.py::TestEmbeddingService", "type": "Class"}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRetrievalService", "type": "Class"}, {"nodeid": "unit/adapters/test_rag_engine.py::TestRAGEnginePerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_service_initialization", "type": "Coroutine", "lineno": 62}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_register_adapter_success", "type": "Coroutine", "lineno": 84}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_register_duplicate_adapter", "type": "Coroutine", "lineno": 107}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_register_adapter_max_limit", "type": "Coroutine", "lineno": 122}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_unregister_adapter", "type": "Coroutine", "lineno": 147}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_unregister_nonexistent_adapter", "type": "Coroutine", "lineno": 166}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_get_adapter_registration", "type": "Coroutine", "lineno": 172}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_find_adapters_by_type", "type": "Coroutine", "lineno": 187}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_find_adapters_by_tags", "type": "Coroutine", "lineno": 212}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_health_check", "type": "Coroutine", "lineno": 235}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_service_metrics", "type": "Coroutine", "lineno": 245}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_concurrent_registration", "type": "Coroutine", "lineno": 257}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_validation_enabled", "type": "Coroutine", "lineno": 287}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_auto_cleanup", "type": "Coroutine", "lineno": 307}, {"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService::test_error_handling", "type": "Coroutine", "lineno": 333}]}, {"nodeid": "unit/adapters/test_registry_service.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_registry_service.py::TestAdapterRegistryService", "type": "Class"}]}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_orchestrator_initialization", "type": "Coroutine", "lineno": 91}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_register_service", "type": "Coroutine", "lineno": 110}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_unregister_service", "type": "Coroutine", "lineno": 129}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_add_dependency", "type": "Coroutine", "lineno": 148}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_circular_dependency_detection", "type": "Coroutine", "lineno": 167}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_start_services_with_dependencies", "type": "Coroutine", "lineno": 181}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_stop_services_reverse_order", "type": "Coroutine", "lineno": 212}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_start_specific_service", "type": "Coroutine", "lineno": 233}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_stop_specific_service", "type": "Coroutine", "lineno": 250}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_service_startup_failure", "type": "Coroutine", "lineno": 265}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_service_shutdown_failure", "type": "Coroutine", "lineno": 279}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_health_monitoring", "type": "Coroutine", "lineno": 293}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_unhealthy_service_detection", "type": "Coroutine", "lineno": 311}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_get_service_status", "type": "Coroutine", "lineno": 329}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_get_all_services_status", "type": "Coroutine", "lineno": 348}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_concurrent_service_operations", "type": "Coroutine", "lineno": 366}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_service_dependency_validation", "type": "Coroutine", "lineno": 387}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_service_node_creation", "type": "Coroutine", "lineno": 401}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_orchestrator_shutdown", "type": "Coroutine", "lineno": 413}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_service_metrics_collection", "type": "Coroutine", "lineno": 429}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_service_lifecycle_events", "type": "Coroutine", "lineno": 447}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_timeout_handling", "type": "Coroutine", "lineno": 461}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_error_recovery", "type": "Coroutine", "lineno": 494}, {"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator::test_orchestrator_state_consistency", "type": "Coroutine", "lineno": 521}]}, {"nodeid": "unit/adapters/test_service_orchestrator.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_service_orchestrator.py::TestAdapterServiceOrchestrator", "type": "Class"}]}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_adapter_initialization", "type": "Coroutine", "lineno": 77}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_prompt_template_processing", "type": "Coroutine", "lineno": 90}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_custom_prompt_template", "type": "Coroutine", "lineno": 112}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_prompt_template_validation", "type": "Coroutine", "lineno": 146}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_knowledge_base_integration", "type": "Coroutine", "lineno": 160}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_batch_processing", "type": "Coroutine", "lineno": 193}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_health_check", "type": "Coroutine", "lineno": 214}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_error_handling", "type": "Coroutine", "lineno": 227}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_concurrent_processing", "type": "Coroutine", "lineno": 244}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter::test_template_caching", "type": "Coroutine", "lineno": 265}]}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapterPerformance", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapterPerformance::test_response_time", "type": "Coroutine", "lineno": 343}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapterPerformance::test_throughput", "type": "Coroutine", "lineno": 362}]}, {"nodeid": "unit/adapters/test_soft_adapter.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapter", "type": "Class"}, {"nodeid": "unit/adapters/test_soft_adapter.py::TestSoftAdapterPerformance", "type": "Class"}]}, {"nodeid": "unit/adapters/test_validation_service.py::TestValidationRule", "outcome": "passed", "result": []}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_service_initialization", "type": "Coroutine", "lineno": 103}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_validate_adapter_success", "type": "Coroutine", "lineno": 129}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_validate_adapter_with_issues", "type": "Coroutine", "lineno": 151}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_validation_caching", "type": "Coroutine", "lineno": 177}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_validation_without_cache", "type": "Coroutine", "lineno": 195}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_register_custom_validation_rule", "type": "Coroutine", "lineno": 208}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_unregister_validation_rule", "type": "Coroutine", "lineno": 227}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_validation_timeout", "type": "Coroutine", "lineno": 246}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_health_check", "type": "Coroutine", "lineno": 281}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_service_metrics", "type": "Coroutine", "lineno": 292}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_cache_cleanup", "type": "Coroutine", "lineno": 304}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_concurrent_validation", "type": "Coroutine", "lineno": 339}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_default_validation_rules", "type": "Coroutine", "lineno": 362}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_adapter_class_rule", "type": "Coroutine", "lineno": 372}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_adapter_identity_rule", "type": "Coroutine", "lineno": 389}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_validation_result_scoring", "type": "Coroutine", "lineno": 405}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService::test_error_handling", "type": "Coroutine", "lineno": 441}]}, {"nodeid": "unit/adapters/test_validation_service.py", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_validation_service.py::TestValidationRule", "type": "Class"}, {"nodeid": "unit/adapters/test_validation_service.py::TestAdapterValidationService", "type": "Class"}]}, {"nodeid": "unit/adapters", "outcome": "passed", "result": [{"nodeid": "unit/adapters/test_adapter_composition.py", "type": "Module"}, {"nodeid": "unit/adapters/test_adapter_manager.py", "type": "Module"}, {"nodeid": "unit/adapters/test_event_service.py", "type": "Module"}, {"nodeid": "unit/adapters/test_hard_adapter.py", "type": "Module"}, {"nodeid": "unit/adapters/test_health_service.py", "type": "Module"}, {"nodeid": "unit/adapters/test_intelligent_adapter.py", "type": "Module"}, {"nodeid": "unit/adapters/test_multimodal_adapter.py", "type": "Module"}, {"nodeid": "unit/adapters/test_prompt_engine.py", "type": "Module"}, {"nodeid": "unit/adapters/test_rag_engine.py", "type": "Module"}, {"nodeid": "unit/adapters/test_registry_service.py", "type": "Module"}, {"nodeid": "unit/adapters/test_service_orchestrator.py", "type": "Module"}, {"nodeid": "unit/adapters/test_soft_adapter.py", "type": "Module"}, {"nodeid": "unit/adapters/test_validation_service.py", "type": "Module"}]}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPI", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestChatAPI::test_message_creation", "type": "Function", "lineno": 48}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPI::test_message_validation", "type": "Function", "lineno": 57}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPI::test_character_config_creation", "type": "Function", "lineno": 67}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPI::test_character_config_validation", "type": "Function", "lineno": 76}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPI::test_emotion_types", "type": "Function", "lineno": 85}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPI::test_personality_types", "type": "Function", "lineno": 101}]}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPIIntegration", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestChatAPIIntegration::test_chat_endpoint_basic", "type": "Coroutine", "lineno": 140}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPIIntegration::test_chat_with_emotion", "type": "Coroutine", "lineno": 162}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPIIntegration::test_chat_with_context", "type": "Coroutine", "lineno": 184}]}, {"nodeid": "unit/api/test_chat_api.py::TestCharacterManagement", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestCharacterManagement::test_create_character", "type": "Coroutine", "lineno": 227}, {"nodeid": "unit/api/test_chat_api.py::TestCharacterManagement::test_update_character", "type": "Coroutine", "lineno": 247}, {"nodeid": "unit/api/test_chat_api.py::TestCharacterManagement::test_list_characters", "type": "Function", "lineno": 268}]}, {"nodeid": "unit/api/test_chat_api.py::TestEmotionSystem", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestEmotionSystem::test_emotion_analysis", "type": "Coroutine", "lineno": 303}, {"nodeid": "unit/api/test_chat_api.py::TestEmotionSystem::test_emotion_setting", "type": "Coroutine", "lineno": 326}, {"nodeid": "unit/api/test_chat_api.py::TestEmotionSystem::test_emotion_transitions", "type": "Function", "lineno": 351}]}, {"nodeid": "unit/api/test_chat_api.py::TestAPIPerformance", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestAPIPerformance::test_chat_response_time", "type": "Coroutine", "lineno": 371}, {"nodeid": "unit/api/test_chat_api.py::TestAPIPerformance::test_concurrent_chat_requests", "type": "Coroutine", "lineno": 390}, {"nodeid": "unit/api/test_chat_api.py::TestAPIPerformance::test_memory_usage_under_load", "type": "Function", "lineno": 413}]}, {"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling::test_invalid_message_content", "type": "Function", "lineno": 437}, {"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling::test_invalid_emotion_intensity", "type": "Function", "lineno": 446}, {"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling::test_invalid_character_config", "type": "Function", "lineno": 456}, {"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling::test_personality_traits_limit", "type": "Function", "lineno": 464}, {"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling::test_service_unavailable_error", "type": "Coroutine", "lineno": 476}]}, {"nodeid": "unit/api/test_chat_api.py", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py::TestChatAPI", "type": "Class"}, {"nodeid": "unit/api/test_chat_api.py::TestChatAPIIntegration", "type": "Class"}, {"nodeid": "unit/api/test_chat_api.py::TestCharacterManagement", "type": "Class"}, {"nodeid": "unit/api/test_chat_api.py::TestEmotionSystem", "type": "Class"}, {"nodeid": "unit/api/test_chat_api.py::TestAPIPerformance", "type": "Class"}, {"nodeid": "unit/api/test_chat_api.py::TestAPIErrorHandling", "type": "Class"}]}, {"nodeid": "unit/api/test_chat_routes.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/api/test_chat_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/api/test_chat_routes.py:18: in <module>\n    from zishu.api.routes.chat import (\nzishu/api/routes/chat.py:31: in <module>\n    from zishu.models.inference import get_inference_engine\nE   ModuleNotFoundError: No module named 'zishu.models.inference'"}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer", "outcome": "passed", "result": [{"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_container_initialization", "type": "Function", "lineno": 42}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_register_service", "type": "Function", "lineno": 50}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_register_factory", "type": "Function", "lineno": 56}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_register_singleton", "type": "Function", "lineno": 65}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_get_service", "type": "Function", "lineno": 71}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_get_service_not_found", "type": "Function", "lineno": 77}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_get_singleton", "type": "Function", "lineno": 82}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_factory_creation", "type": "Function", "lineno": 94}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_has_service", "type": "Function", "lineno": 113}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_remove_service", "type": "Function", "lineno": 120}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_clear_services", "type": "Function", "lineno": 128}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer::test_thread_safety", "type": "Function", "lineno": 143}]}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions", "outcome": "passed", "result": [{"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions::test_get_logger", "type": "Function", "lineno": 183}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions::test_get_config_manager", "type": "Function", "lineno": 195}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions::test_get_model_registry", "type": "Function", "lineno": 207}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions::test_get_performance_monitor", "type": "Function", "lineno": 219}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions::test_get_thread_factory_from_deps", "type": "Function", "lineno": 231}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions::test_get_character_config", "type": "Function", "lineno": 243}]}, {"nodeid": "unit/api/test_dependencies.py::TestServiceLifecycle", "outcome": "passed", "result": [{"nodeid": "unit/api/test_dependencies.py::TestServiceLifecycle::test_service_lifecycle_interface", "type": "Function", "lineno": 262}, {"nodeid": "unit/api/test_dependencies.py::TestServiceLifecycle::test_abstract_methods", "type": "Function", "lineno": 288}]}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyIntegration", "outcome": "passed", "result": [{"nodeid": "unit/api/test_dependencies.py::TestDependencyIntegration::test_full_dependency_setup", "type": "Function", "lineno": 306}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyIntegration::test_dependency_injection_with_mock_services", "type": "Function", "lineno": 340}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyIntegration::test_error_handling_in_dependencies", "type": "Function", "lineno": 383}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyIntegration::test_async_dependency_usage", "type": "Coroutine", "lineno": 396}]}, {"nodeid": "unit/api/test_dependencies.py", "outcome": "passed", "result": [{"nodeid": "unit/api/test_dependencies.py::TestDependencyContainer", "type": "Class"}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyFunctions", "type": "Class"}, {"nodeid": "unit/api/test_dependencies.py::TestServiceLifecycle", "type": "Class"}, {"nodeid": "unit/api/test_dependencies.py::TestDependencyIntegration", "type": "Class"}]}, {"nodeid": "unit/api/test_health_routes.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "unit/api/test_health_routes.py::TestHealthStatus", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestHealthStatus::test_health_status_values", "type": "Function", "lineno": 28}, {"nodeid": "unit/api/test_health_routes.py::TestHealthStatus::test_health_status_comparison", "type": "Function", "lineno": 34}]}, {"nodeid": "unit/api/test_health_routes.py::TestCheckResult", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestCheckResult::test_check_result_creation", "type": "Function", "lineno": 45}, {"nodeid": "unit/api/test_health_routes.py::TestCheckResult::test_check_result_with_details", "type": "Function", "lineno": 63}]}, {"nodeid": "unit/api/test_health_routes.py::TestDeepHealthResponse", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestDeepHealthResponse::test_deep_health_response_creation", "type": "Function", "lineno": 84}]}, {"nodeid": "unit/api/test_health_routes.py::TestHealthChecker::TestableChecker", "outcome": "passed", "result": []}, {"nodeid": "unit/api/test_health_routes.py::TestHealthChecker", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestHealthChecker::TestableChecker", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestHealthChecker::test_successful_check", "type": "Coroutine", "lineno": 140}, {"nodeid": "unit/api/test_health_routes.py::TestHealthChecker::test_failed_check", "type": "Coroutine", "lineno": 152}, {"nodeid": "unit/api/test_health_routes.py::TestHealthChecker::test_timeout_check", "type": "Coroutine", "lineno": 163}]}, {"nodeid": "unit/api/test_health_routes.py::TestModelChecker", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestModelChecker::test_model_check_with_gpu", "type": "Coroutine", "lineno": 180}, {"nodeid": "unit/api/test_health_routes.py::TestModelChecker::test_model_check_without_gpu", "type": "Coroutine", "lineno": 204}]}, {"nodeid": "unit/api/test_health_routes.py::TestAdapterChecker", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestAdapterChecker::test_adapter_check_with_status", "type": "Coroutine", "lineno": 223}, {"nodeid": "unit/api/test_health_routes.py::TestAdapterChecker::test_adapter_check_without_status", "type": "Coroutine", "lineno": 242}, {"nodeid": "unit/api/test_health_routes.py::TestAdapterChecker::test_adapter_check_failure", "type": "Coroutine", "lineno": 255}]}, {"nodeid": "unit/api/test_health_routes.py::TestSystemChecker", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestSystemChecker::test_system_check_healthy", "type": "Coroutine", "lineno": 273}, {"nodeid": "unit/api/test_health_routes.py::TestSystemChecker::test_system_check_degraded", "type": "Coroutine", "lineno": 306}, {"nodeid": "unit/api/test_health_routes.py::TestSystemChecker::test_system_check_failure", "type": "Coroutine", "lineno": 338}]}, {"nodeid": "unit/api/test_health_routes.py::TestHealthUtilities", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestHealthUtilities::test_get_uptime", "type": "Function", "lineno": 356}, {"nodeid": "unit/api/test_health_routes.py::TestHealthUtilities::test_get_health_status_all_healthy", "type": "Coroutine", "lineno": 362}, {"nodeid": "unit/api/test_health_routes.py::TestHealthUtilities::test_get_health_status_with_failures", "type": "Coroutine", "lineno": 408}, {"nodeid": "unit/api/test_health_routes.py::TestHealthUtilities::test_get_health_status_with_exceptions", "type": "Coroutine", "lineno": 445}]}, {"nodeid": "unit/api/test_health_routes.py::TestHealthRoutes", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestHealthRoutes::test_health_check_endpoint", "type": "Function", "lineno": 483}, {"nodeid": "unit/api/test_health_routes.py::TestHealthRoutes::test_ping_endpoint", "type": "Function", "lineno": 489}, {"nodeid": "unit/api/test_health_routes.py::TestHealthRoutes::test_deep_health_check_endpoint", "type": "Function", "lineno": 493}]}, {"nodeid": "unit/api/test_health_routes.py::TestHealthPerformance", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestHealthPerformance::test_health_check_performance", "type": "Coroutine", "lineno": 503}, {"nodeid": "unit/api/test_health_routes.py::TestHealthPerformance::test_parallel_health_checks", "type": "Coroutine", "lineno": 519}]}, {"nodeid": "unit/api/test_health_routes.py", "outcome": "passed", "result": [{"nodeid": "unit/api/test_health_routes.py::TestClient", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestHealthStatus", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestCheckResult", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestDeepHealthResponse", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestHealthChecker", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestModelChecker", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestAdapterChecker", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestSystemChecker", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestHealthUtilities", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestHealthRoutes", "type": "Class"}, {"nodeid": "unit/api/test_health_routes.py::TestHealthPerformance", "type": "Class"}]}, {"nodeid": "unit/api/test_model_routes.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "unit/api/test_model_routes.py::TestAdapterStatus", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestAdapterStatus::test_adapter_status_values", "type": "Function", "lineno": 31}, {"nodeid": "unit/api/test_model_routes.py::TestAdapterStatus::test_adapter_status_comparison", "type": "Function", "lineno": 41}]}, {"nodeid": "unit/api/test_model_routes.py::TestModelOperationType", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestModelOperationType::test_operation_type_values", "type": "Function", "lineno": 52}]}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_validate_adapter_name_valid", "type": "Coroutine", "lineno": 68}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_validate_adapter_name_invalid", "type": "Coroutine", "lineno": 84}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_validate_adapter_name_edge_cases", "type": "Coroutine", "lineno": 105}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_get_adapter_file_info_existing_file", "type": "Coroutine", "lineno": 118}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_get_adapter_file_info_nonexistent_file", "type": "Coroutine", "lineno": 141}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_get_adapter_file_info_directory", "type": "Coroutine", "lineno": 149}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_validate_adapter_path_safe", "type": "Coroutine", "lineno": 159}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions::test_validate_adapter_path_unsafe", "type": "Coroutine", "lineno": 175}]}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions::test_cleanup_memory_task", "type": "Coroutine", "lineno": 202}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions::test_cleanup_memory_task_with_torch", "type": "Coroutine", "lineno": 215}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions::test_cleanup_memory_task_exception", "type": "Coroutine", "lineno": 229}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions::test_get_system_info_success", "type": "Coroutine", "lineno": 239}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions::test_get_system_info_with_gpu", "type": "Coroutine", "lineno": 257}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions::test_get_system_info_exception", "type": "Coroutine", "lineno": 288}]}, {"nodeid": "unit/api/test_model_routes.py::TestModelRouteLogic", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestModelRouteLogic::test_list_adapters_logic", "type": "Coroutine", "lineno": 343}, {"nodeid": "unit/api/test_model_routes.py::TestModelRouteLogic::test_load_adapter_logic", "type": "Coroutine", "lineno": 353}, {"nodeid": "unit/api/test_model_routes.py::TestModelRouteLogic::test_unload_adapter_logic", "type": "Coroutine", "lineno": 372}, {"nodeid": "unit/api/test_model_routes.py::TestModelRouteLogic::test_switch_adapter_logic", "type": "Coroutine", "lineno": 388}]}, {"nodeid": "unit/api/test_model_routes.py::TestModelErrorHandling", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestModelErrorHandling::test_load_adapter_failure", "type": "Coroutine", "lineno": 423}, {"nodeid": "unit/api/test_model_routes.py::TestModelErrorHandling::test_unload_adapter_failure", "type": "Coroutine", "lineno": 433}, {"nodeid": "unit/api/test_model_routes.py::TestModelErrorHandling::test_switch_adapter_failure", "type": "Coroutine", "lineno": 442}, {"nodeid": "unit/api/test_model_routes.py::TestModelErrorHandling::test_get_status_failure", "type": "Function", "lineno": 452}]}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration::test_list_adapters_endpoint", "type": "Function", "lineno": 470}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration::test_load_adapter_endpoint", "type": "Function", "lineno": 474}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration::test_unload_adapter_endpoint", "type": "Function", "lineno": 478}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration::test_switch_adapter_endpoint", "type": "Function", "lineno": 482}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration::test_get_model_status_endpoint", "type": "Function", "lineno": 486}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration::test_get_adapter_info_endpoint", "type": "Function", "lineno": 490}]}, {"nodeid": "unit/api/test_model_routes.py::TestModelPerformance", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestModelPerformance::test_adapter_validation_performance", "type": "Coroutine", "lineno": 500}, {"nodeid": "unit/api/test_model_routes.py::TestModelPerformance::test_file_info_performance", "type": "Coroutine", "lineno": 517}, {"nodeid": "unit/api/test_model_routes.py::TestModelPerformance::test_system_info_performance", "type": "Coroutine", "lineno": 540}]}, {"nodeid": "unit/api/test_model_routes.py::TestModelStress", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestModelStress::test_concurrent_validation", "type": "Coroutine", "lineno": 563}, {"nodeid": "unit/api/test_model_routes.py::TestModelStress::test_memory_cleanup_stress", "type": "Coroutine", "lineno": 588}]}, {"nodeid": "unit/api/test_model_routes.py", "outcome": "passed", "result": [{"nodeid": "unit/api/test_model_routes.py::TestClient", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestAdapterStatus", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestModelOperationType", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestValidationFunctions", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestUtilityFunctions", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestModelRouteLogic", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestModelErrorHandling", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestModelRoutesIntegration", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestModelPerformance", "type": "Class"}, {"nodeid": "unit/api/test_model_routes.py::TestModelStress", "type": "Class"}]}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_message_role_enum", "type": "Function", "lineno": 51}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_message_valid", "type": "Function", "lineno": 58}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_message_with_metadata", "type": "Function", "lineno": 72}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_message_function_call", "type": "Function", "lineno": 85}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_message_invalid_role", "type": "Function", "lineno": 102}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_message_empty_content", "type": "Function", "lineno": 111}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_request_valid", "type": "Function", "lineno": 124}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_request_with_functions", "type": "Function", "lineno": 148}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_request_invalid_temperature", "type": "Function", "lineno": 181}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_request_invalid_max_tokens", "type": "Function", "lineno": 198}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_response_valid", "type": "Function", "lineno": 215}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_stream_response_valid", "type": "Function", "lineno": 239}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_stream_response_finished", "type": "Function", "lineno": 252}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_chat_history_valid", "type": "Function", "lineno": 265}, {"nodeid": "unit/api/test_schemas.py::TestChatSchemas::test_conversation_summary_valid", "type": "Function", "lineno": 292}]}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_info_valid", "type": "Function", "lineno": 313}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_info_size_formatting", "type": "Function", "lineno": 335}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_load_request_valid", "type": "Function", "lineno": 349}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_load_request_invalid_path", "type": "Function", "lineno": 367}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_load_request_invalid_name", "type": "Function", "lineno": 375}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_unload_request_valid", "type": "Function", "lineno": 383}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_switch_request_valid", "type": "Function", "lineno": 395}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_adapter_switch_request_same_adapter", "type": "Function", "lineno": 411}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_model_status_valid", "type": "Function", "lineno": 420}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas::test_system_info_valid", "type": "Function", "lineno": 441}]}, {"nodeid": "unit/api/test_schemas.py::TestHealthSchemas", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestHealthSchemas::test_component_health_valid", "type": "Function", "lineno": 470}, {"nodeid": "unit/api/test_schemas.py::TestHealthSchemas::test_component_health_unhealthy", "type": "Function", "lineno": 489}, {"nodeid": "unit/api/test_schemas.py::TestHealthSchemas::test_system_metrics_valid", "type": "Function", "lineno": 504}, {"nodeid": "unit/api/test_schemas.py::TestHealthSchemas::test_health_check_response_valid", "type": "Function", "lineno": 524}, {"nodeid": "unit/api/test_schemas.py::TestHealthSchemas::test_deep_health_check_response_valid", "type": "Function", "lineno": 537}]}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_base_response_valid", "type": "Function", "lineno": 591}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_error_response_valid", "type": "Function", "lineno": 605}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_pagination_params_valid", "type": "Function", "lineno": 623}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_pagination_params_invalid_page", "type": "Function", "lineno": 637}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_pagination_params_invalid_size", "type": "Function", "lineno": 645}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_sort_order_enum", "type": "Function", "lineno": 653}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_filter_params_valid", "type": "Function", "lineno": 658}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas::test_api_version_valid", "type": "Function", "lineno": 676}]}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestSchemaValidation::test_nested_model_validation", "type": "Function", "lineno": 695}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation::test_optional_field_validation", "type": "Function", "lineno": 715}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation::test_field_constraints_validation", "type": "Function", "lineno": 728}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation::test_custom_validator_methods", "type": "Function", "lineno": 738}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation::test_datetime_serialization", "type": "Function", "lineno": 754}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation::test_model_copy_and_update", "type": "Function", "lineno": 775}]}, {"nodeid": "unit/api/test_schemas.py::TestSchemaPerformance", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestSchemaPerformance::test_message_creation_performance", "type": "Function", "lineno": 797}, {"nodeid": "unit/api/test_schemas.py::TestSchemaPerformance::test_serialization_performance", "type": "Function", "lineno": 820}]}, {"nodeid": "unit/api/test_schemas.py", "outcome": "passed", "result": [{"nodeid": "unit/api/test_schemas.py::TestChatSchemas", "type": "Class"}, {"nodeid": "unit/api/test_schemas.py::TestModelSchemas", "type": "Class"}, {"nodeid": "unit/api/test_schemas.py::TestHealthSchemas", "type": "Class"}, {"nodeid": "unit/api/test_schemas.py::TestCommonSchemas", "type": "Class"}, {"nodeid": "unit/api/test_schemas.py::TestSchemaValidation", "type": "Class"}, {"nodeid": "unit/api/test_schemas.py::TestSchemaPerformance", "type": "Class"}]}, {"nodeid": "unit/api/test_server_middleware.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "unit/api/test_server_middleware.py::TestCORSMiddleware", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestCORSMiddleware::test_setup_cors_default", "type": "Function", "lineno": 31}, {"nodeid": "unit/api/test_server_middleware.py::TestCORSMiddleware::test_setup_cors_custom_origins", "type": "Function", "lineno": 46}, {"nodeid": "unit/api/test_server_middleware.py::TestCORSMiddleware::test_cors_preflight_request", "type": "Function", "lineno": 61}, {"nodeid": "unit/api/test_server_middleware.py::TestCORSMiddleware::test_cors_actual_request", "type": "Function", "lineno": 86}]}, {"nodeid": "unit/api/test_server_middleware.py::TestSecurityMiddleware", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestSecurityMiddleware::test_security_middleware_headers", "type": "Function", "lineno": 112}, {"nodeid": "unit/api/test_server_middleware.py::TestSecurityMiddleware::test_security_middleware_csp_header", "type": "Function", "lineno": 132}, {"nodeid": "unit/api/test_server_middleware.py::TestSecurityMiddleware::test_security_middleware_hsts_header", "type": "Function", "lineno": 148}]}, {"nodeid": "unit/api/test_server_middleware.py::TestRateLimitMiddleware", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestRateLimitMiddleware::test_rate_limit_within_limit", "type": "Function", "lineno": 186}, {"nodeid": "unit/api/test_server_middleware.py::TestRateLimitMiddleware::test_rate_limit_exceeded", "type": "Function", "lineno": 197}, {"nodeid": "unit/api/test_server_middleware.py::TestRateLimitMiddleware::test_rate_limit_different_clients", "type": "Function", "lineno": 213}, {"nodeid": "unit/api/test_server_middleware.py::TestRateLimitMiddleware::test_rate_limit_reset_after_period", "type": "Function", "lineno": 229}]}, {"nodeid": "unit/api/test_server_middleware.py::TestLoggingMiddleware", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestLoggingMiddleware::test_logging_middleware_success", "type": "Function", "lineno": 264}, {"nodeid": "unit/api/test_server_middleware.py::TestLoggingMiddleware::test_logging_middleware_error", "type": "Function", "lineno": 282}, {"nodeid": "unit/api/test_server_middleware.py::TestLoggingMiddleware::test_request_logging_middleware_with_body", "type": "Function", "lineno": 296}, {"nodeid": "unit/api/test_server_middleware.py::TestLoggingMiddleware::test_request_logging_middleware_sensitive_data", "type": "Function", "lineno": 313}]}, {"nodeid": "unit/api/test_server_middleware.py::TestErrorHandlerMiddleware", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestErrorHandlerMiddleware::test_error_handler_http_exception", "type": "Function", "lineno": 341}, {"nodeid": "unit/api/test_server_middleware.py::TestErrorHandlerMiddleware::test_error_handler_unexpected_exception", "type": "Function", "lineno": 359}, {"nodeid": "unit/api/test_server_middleware.py::TestErrorHandlerMiddleware::test_error_handler_with_request_id", "type": "Function", "lineno": 379}, {"nodeid": "unit/api/test_server_middleware.py::TestErrorHandlerMiddleware::test_error_handler_validation_error", "type": "Function", "lineno": 397}]}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareChain", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareChain::test_middleware_execution_order", "type": "Function", "lineno": 433}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareChain::test_middleware_request_modification", "type": "Function", "lineno": 471}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareChain::test_middleware_response_modification", "type": "Function", "lineno": 495}]}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareIntegration", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareIntegration::test_full_middleware_stack", "type": "Function", "lineno": 523}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareIntegration::test_middleware_with_async_endpoints", "type": "Function", "lineno": 558}]}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewarePerformance", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestMiddlewarePerformance::test_middleware_overhead", "type": "Function", "lineno": 582}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewarePerformance::test_rate_limit_performance", "type": "Function", "lineno": 624}]}, {"nodeid": "unit/api/test_server_middleware.py", "outcome": "passed", "result": [{"nodeid": "unit/api/test_server_middleware.py::TestClient", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestCORSMiddleware", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestSecurityMiddleware", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestRateLimitMiddleware", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestLoggingMiddleware", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestErrorHandlerMiddleware", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareChain", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewareIntegration", "type": "Class"}, {"nodeid": "unit/api/test_server_middleware.py::TestMiddlewarePerformance", "type": "Class"}]}, {"nodeid": "unit/api", "outcome": "passed", "result": [{"nodeid": "unit/api/test_chat_api.py", "type": "Module"}, {"nodeid": "unit/api/test_chat_routes.py", "type": "Module"}, {"nodeid": "unit/api/test_dependencies.py", "type": "Module"}, {"nodeid": "unit/api/test_health_routes.py", "type": "Module"}, {"nodeid": "unit/api/test_model_routes.py", "type": "Module"}, {"nodeid": "unit/api/test_schemas.py", "type": "Module"}, {"nodeid": "unit/api/test_server_middleware.py", "type": "Module"}]}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager", "outcome": "passed", "result": [{"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_manager_initialization", "type": "Function", "lineno": 65}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_create_character", "type": "Coroutine", "lineno": 71}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_get_character", "type": "Coroutine", "lineno": 83}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_update_character", "type": "Coroutine", "lineno": 95}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_delete_character", "type": "Coroutine", "lineno": 113}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_list_characters", "type": "Coroutine", "lineno": 124}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_activate_character", "type": "Coroutine", "lineno": 136}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_deactivate_character", "type": "Coroutine", "lineno": 147}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_get_character_state", "type": "Coroutine", "lineno": 158}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_update_character_state", "type": "Coroutine", "lineno": 184}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_set_character_emotion", "type": "Coroutine", "lineno": 201}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_analyze_emotion", "type": "Coroutine", "lineno": 220}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_interaction", "type": "Coroutine", "lineno": 244}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_batch_character_operations", "type": "Coroutine", "lineno": 270}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_validation", "type": "Function", "lineno": 297}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_template_loading", "type": "Function", "lineno": 323}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_memory_management", "type": "Coroutine", "lineno": 343}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_learning", "type": "Coroutine", "lineno": 370}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_error_handling", "type": "Function", "lineno": 400}, {"nodeid": "unit/character/test_character_manager.py::TestCharacterManager::test_character_performance_metrics", "type": "Coroutine", "lineno": 414}]}, {"nodeid": "unit/character/test_character_manager.py", "outcome": "passed", "result": [{"nodeid": "unit/character/test_character_manager.py::TestCharacterManager", "type": "Class"}]}, {"nodeid": "unit/character", "outcome": "passed", "result": [{"nodeid": "unit/character/test_character_manager.py", "type": "Module"}]}, {"nodeid": "unit/metrics/test_aggregators.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/metrics/test_aggregators.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/metrics/test_aggregators.py:15: in <module>\n    from zishu.metrics.aggregators.base import BaseAggregator, AggregatorConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "unit/metrics/test_collectors.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/metrics/test_collectors.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/metrics/test_collectors.py:16: in <module>\n    from zishu.metrics.collectors.base import BaseCollector, CollectorConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "unit/metrics/test_exporters.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/metrics/test_exporters.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/metrics/test_exporters.py:17: in <module>\n    from zishu.metrics.exporters.base import BaseExporter, ExporterConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "unit/metrics/test_manager.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/metrics/test_manager.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/metrics/test_manager.py:14: in <module>\n    from zishu.metrics.manager import MetricsManager, MetricsConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "unit/metrics/test_metrics_core.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/metrics/test_metrics_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/metrics/test_metrics_core.py:15: in <module>\n    from zishu.metrics.core.manager import MetricsManager, MetricsManagerConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "unit/metrics/test_storage.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/metrics/test_storage.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/metrics/test_storage.py:18: in <module>\n    from zishu.metrics.storage.base import BaseStorage, StorageConfig\nE   ModuleNotFoundError: No module named 'zishu.metrics'"}, {"nodeid": "unit/metrics", "outcome": "passed", "result": [{"nodeid": "unit/metrics/test_aggregators.py", "type": "Module"}, {"nodeid": "unit/metrics/test_collectors.py", "type": "Module"}, {"nodeid": "unit/metrics/test_exporters.py", "type": "Module"}, {"nodeid": "unit/metrics/test_manager.py", "type": "Module"}, {"nodeid": "unit/metrics/test_metrics_core.py", "type": "Module"}, {"nodeid": "unit/metrics/test_storage.py", "type": "Module"}]}, {"nodeid": "unit/models/test_character_models.py::TestEnumTypes", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestEnumTypes::test_message_role_enum", "type": "Function", "lineno": 38}, {"nodeid": "unit/models/test_character_models.py::TestEnumTypes::test_message_type_enum", "type": "Function", "lineno": 44}, {"nodeid": "unit/models/test_character_models.py::TestEnumTypes::test_emotion_type_enum", "type": "Function", "lineno": 54}, {"nodeid": "unit/models/test_character_models.py::TestEnumTypes::test_personality_type_enum", "type": "Function", "lineno": 68}, {"nodeid": "unit/models/test_character_models.py::TestEnumTypes::test_voice_style_enum", "type": "Function", "lineno": 77}, {"nodeid": "unit/models/test_character_models.py::TestEnumTypes::test_animation_type_enum", "type": "Function", "lineno": 84}]}, {"nodeid": "unit/models/test_character_models.py::TestMessage", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestMessage::test_message_creation_basic", "type": "Function", "lineno": 97}, {"nodeid": "unit/models/test_character_models.py::TestMessage::test_message_with_emotion", "type": "Function", "lineno": 111}, {"nodeid": "unit/models/test_character_models.py::TestMessage::test_message_with_multimedia", "type": "Function", "lineno": 123}, {"nodeid": "unit/models/test_character_models.py::TestMessage::test_message_with_metadata", "type": "Function", "lineno": 137}, {"nodeid": "unit/models/test_character_models.py::TestMessage::test_message_content_validation", "type": "Function", "lineno": 157}, {"nodeid": "unit/models/test_character_models.py::TestMessage::test_message_length_limits", "type": "Function", "lineno": 180}, {"nodeid": "unit/models/test_character_models.py::TestMessage::test_emotion_intensity_validation", "type": "Function", "lineno": 198}]}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_character_config_creation_basic", "type": "Function", "lineno": 229}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_character_config_with_full_options", "type": "Function", "lineno": 244}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_character_config_validation", "type": "Function", "lineno": 278}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_personality_traits_validation", "type": "Function", "lineno": 301}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_level_parameters_validation", "type": "Function", "lineno": 320}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_emotion_history_validation", "type": "Function", "lineno": 341}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig::test_max_response_length_validation", "type": "Function", "lineno": 358}]}, {"nodeid": "unit/models/test_character_models.py::TestCharacterState", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestCharacterState::test_character_state_creation", "type": "Function", "lineno": 389}, {"nodeid": "unit/models/test_character_models.py::TestCharacterState::test_character_state_with_context", "type": "Function", "lineno": 405}]}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestRequestModels::test_create_character_request", "type": "Function", "lineno": 429}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels::test_update_character_request", "type": "Function", "lineno": 447}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels::test_set_emotion_request", "type": "Function", "lineno": 465}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels::test_emotion_analysis_request", "type": "Function", "lineno": 481}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels::test_character_interaction_request", "type": "Function", "lineno": 493}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels::test_batch_character_operation", "type": "Function", "lineno": 509}]}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_character_response", "type": "Function", "lineno": 527}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_character_list_response", "type": "Function", "lineno": 545}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_emotion_response", "type": "Function", "lineno": 565}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_emotion_analysis_response", "type": "Function", "lineno": 582}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_character_interaction_response", "type": "Function", "lineno": 605}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_batch_operation_response", "type": "Function", "lineno": 628}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels::test_system_stats_response", "type": "Function", "lineno": 654}]}, {"nodeid": "unit/models/test_character_models.py::TestModelIntegration", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestModelIntegration::test_character_config_to_dict_serialization", "type": "Function", "lineno": 683}, {"nodeid": "unit/models/test_character_models.py::TestModelIntegration::test_character_config_from_dict_deserialization", "type": "Function", "lineno": 699}, {"nodeid": "unit/models/test_character_models.py::TestModelIntegration::test_nested_model_validation", "type": "Function", "lineno": 716}, {"nodeid": "unit/models/test_character_models.py::TestModelIntegration::test_model_field_defaults", "type": "Function", "lineno": 734}]}, {"nodeid": "unit/models/test_character_models.py", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py::TestEnumTypes", "type": "Class"}, {"nodeid": "unit/models/test_character_models.py::TestMessage", "type": "Class"}, {"nodeid": "unit/models/test_character_models.py::TestCharacterConfig", "type": "Class"}, {"nodeid": "unit/models/test_character_models.py::TestCharacterState", "type": "Class"}, {"nodeid": "unit/models/test_character_models.py::TestRequestModels", "type": "Class"}, {"nodeid": "unit/models/test_character_models.py::TestResponseModels", "type": "Class"}, {"nodeid": "unit/models/test_character_models.py::TestModelIntegration", "type": "Class"}]}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_inference_engine_initialization", "type": "Function", "lineno": 37}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_load_model", "type": "Coroutine", "lineno": 45}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_unload_model", "type": "Coroutine", "lineno": 57}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_generate_text", "type": "Coroutine", "lineno": 69}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_batch_generation", "type": "Coroutine", "lineno": 85}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_tokenization", "type": "Function", "lineno": 107}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_detokenization", "type": "Function", "lineno": 119}, {"nodeid": "unit/models/test_inference.py::TestInferenceEngine::test_model_info", "type": "Function", "lineno": 131}]}, {"nodeid": "unit/models/test_inference.py::TestModelLoader", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestModelLoader::test_model_loader_initialization", "type": "Function", "lineno": 167}, {"nodeid": "unit/models/test_inference.py::TestModelLoader::test_load_from_path", "type": "Coroutine", "lineno": 173}, {"nodeid": "unit/models/test_inference.py::TestModelLoader::test_load_from_hub", "type": "Coroutine", "lineno": 185}, {"nodeid": "unit/models/test_inference.py::TestModelLoader::test_validate_model_format", "type": "Function", "lineno": 197}, {"nodeid": "unit/models/test_inference.py::TestModelLoader::test_model_caching", "type": "Function", "lineno": 209}]}, {"nodeid": "unit/models/test_inference.py::TestGenerationStrategies", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestGenerationStrategies::test_greedy_generation", "type": "Function", "lineno": 225}, {"nodeid": "unit/models/test_inference.py::TestGenerationStrategies::test_sampling_generation", "type": "Function", "lineno": 245}, {"nodeid": "unit/models/test_inference.py::TestGenerationStrategies::test_beam_search_generation", "type": "Function", "lineno": 264}, {"nodeid": "unit/models/test_inference.py::TestGenerationStrategies::test_temperature_scaling", "type": "Function", "lineno": 283}, {"nodeid": "unit/models/test_inference.py::TestGenerationStrategies::test_top_p_filtering", "type": "Function", "lineno": 298}]}, {"nodeid": "unit/models/test_inference.py::TestModelIntegration", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestModelIntegration::test_end_to_end_generation", "type": "Coroutine", "lineno": 322}, {"nodeid": "unit/models/test_inference.py::TestModelIntegration::test_conversation_context", "type": "Coroutine", "lineno": 341}, {"nodeid": "unit/models/test_inference.py::TestModelIntegration::test_model_with_adapter", "type": "Coroutine", "lineno": 360}]}, {"nodeid": "unit/models/test_inference.py::TestModelPerformance", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestModelPerformance::test_generation_speed", "type": "Coroutine", "lineno": 384}, {"nodeid": "unit/models/test_inference.py::TestModelPerformance::test_memory_efficiency", "type": "Function", "lineno": 399}, {"nodeid": "unit/models/test_inference.py::TestModelPerformance::test_batch_processing_efficiency", "type": "Function", "lineno": 415}, {"nodeid": "unit/models/test_inference.py::TestModelPerformance::test_concurrent_generation", "type": "Function", "lineno": 433}]}, {"nodeid": "unit/models/test_inference.py::TestModelErrorHandling", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestModelErrorHandling::test_model_loading_failure", "type": "Coroutine", "lineno": 456}, {"nodeid": "unit/models/test_inference.py::TestModelErrorHandling::test_out_of_memory_error", "type": "Coroutine", "lineno": 466}, {"nodeid": "unit/models/test_inference.py::TestModelErrorHandling::test_invalid_generation_config", "type": "Function", "lineno": 476}, {"nodeid": "unit/models/test_inference.py::TestModelErrorHandling::test_tokenization_error", "type": "Function", "lineno": 495}, {"nodeid": "unit/models/test_inference.py::TestModelErrorHandling::test_generation_timeout", "type": "Coroutine", "lineno": 504}]}, {"nodeid": "unit/models/test_inference.py", "outcome": "passed", "result": [{"nodeid": "unit/models/test_inference.py::TestInferenceEngine", "type": "Class"}, {"nodeid": "unit/models/test_inference.py::TestModelLoader", "type": "Class"}, {"nodeid": "unit/models/test_inference.py::TestGenerationStrategies", "type": "Class"}, {"nodeid": "unit/models/test_inference.py::TestModelIntegration", "type": "Class"}, {"nodeid": "unit/models/test_inference.py::TestModelPerformance", "type": "Class"}, {"nodeid": "unit/models/test_inference.py::TestModelErrorHandling", "type": "Class"}]}, {"nodeid": "unit/models", "outcome": "passed", "result": [{"nodeid": "unit/models/test_character_models.py", "type": "Module"}, {"nodeid": "unit/models/test_inference.py", "type": "Module"}]}, {"nodeid": "unit/security/test_audit.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/security/test_audit.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/security/test_audit.py:15: in <module>\n    from zishu.security.core.audit import (\nE   ModuleNotFoundError: No module named 'zishu.security'"}, {"nodeid": "unit/security/test_permissions.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/security/test_permissions.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/security/test_permissions.py:14: in <module>\n    from zishu.security.core.permissions import (\nE   ModuleNotFoundError: No module named 'zishu.security'"}, {"nodeid": "unit/security/test_sandbox.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/security/test_sandbox.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/security/test_sandbox.py:17: in <module>\n    from zishu.security.core.sandbox import (\nE   ModuleNotFoundError: No module named 'zishu.security'"}, {"nodeid": "unit/security/test_security_manager.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/security/test_security_manager.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/security/test_security_manager.py:14: in <module>\n    from zishu.security.core.manager import SecurityManager, SecurityManagerConfig\nE   ModuleNotFoundError: No module named 'zishu.security'"}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService", "outcome": "passed", "result": [{"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_security_service_initialization", "type": "Coroutine", "lineno": 67}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_create_security_context", "type": "Coroutine", "lineno": 78}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_validate_security_context", "type": "Coroutine", "lineno": 100}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_check_permission", "type": "Coroutine", "lineno": 134}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_analyze_code_security", "type": "Coroutine", "lineno": 164}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_security_violation_handling", "type": "Coroutine", "lineno": 183}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_security_session_management", "type": "Coroutine", "lineno": 212}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_security_audit_logging", "type": "Coroutine", "lineno": 244}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_security_policy_enforcement", "type": "Coroutine", "lineno": 269}, {"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService::test_security_service_cleanup", "type": "Coroutine", "lineno": 316}]}, {"nodeid": "unit/security/test_security_service.py::TestSecurityContextManager", "outcome": "passed", "result": [{"nodeid": "unit/security/test_security_service.py::TestSecurityContextManager::test_context_creation_and_validation", "type": "Coroutine", "lineno": 349}, {"nodeid": "unit/security/test_security_service.py::TestSecurityContextManager::test_context_expiration", "type": "Coroutine", "lineno": 369}, {"nodeid": "unit/security/test_security_service.py::TestSecurityContextManager::test_context_cleanup", "type": "Coroutine", "lineno": 388}]}, {"nodeid": "unit/security/test_security_service.py::TestSecurityIntegration", "outcome": "passed", "result": [{"nodeid": "unit/security/test_security_service.py::TestSecurityIntegration::test_end_to_end_security_workflow", "type": "Coroutine", "lineno": 438}, {"nodeid": "unit/security/test_security_service.py::TestSecurityIntegration::test_concurrent_security_operations", "type": "Coroutine", "lineno": 493}]}, {"nodeid": "unit/security/test_security_service.py", "outcome": "passed", "result": [{"nodeid": "unit/security/test_security_service.py::TestAdapterSecurityService", "type": "Class"}, {"nodeid": "unit/security/test_security_service.py::TestSecurityContextManager", "type": "Class"}, {"nodeid": "unit/security/test_security_service.py::TestSecurityIntegration", "type": "Class"}]}, {"nodeid": "unit/security/test_threat_detector.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/security/test_threat_detector.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/security/test_threat_detector.py:15: in <module>\n    from zishu.security.core.threat_detector import (\nE   ModuleNotFoundError: No module named 'zishu.security'"}, {"nodeid": "unit/security", "outcome": "passed", "result": [{"nodeid": "unit/security/test_audit.py", "type": "Module"}, {"nodeid": "unit/security/test_permissions.py", "type": "Module"}, {"nodeid": "unit/security/test_sandbox.py", "type": "Module"}, {"nodeid": "unit/security/test_security_manager.py", "type": "Module"}, {"nodeid": "unit/security/test_security_service.py", "type": "Module"}, {"nodeid": "unit/security/test_threat_detector.py", "type": "Module"}]}, {"nodeid": "unit/storage/test_backends.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/storage/test_backends.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/storage/test_backends.py:19: in <module>\n    from zishu.storage.backends.base import BaseStorageBackend, StorageConfig, StorageOperation\nE   ModuleNotFoundError: No module named 'zishu.storage'"}, {"nodeid": "unit/storage/test_factory.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/storage/test_factory.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/storage/test_factory.py:15: in <module>\n    from zishu.storage.factory import StorageFactory, StorageBackendRegistry\nE   ModuleNotFoundError: No module named 'zishu.storage'"}, {"nodeid": "unit/storage/test_manager.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/storage/test_manager.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/storage/test_manager.py:17: in <module>\n    from zishu.storage.manager import StorageManager, StorageManagerConfig\nE   ModuleNotFoundError: No module named 'zishu.storage'"}, {"nodeid": "unit/storage/test_migration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/opt/zishu-sensei/tests/unit/storage/test_migration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/storage/test_migration.py:18: in <module>\n    from zishu.storage.migration import (\nE   ModuleNotFoundError: No module named 'zishu.storage'"}, {"nodeid": "unit/storage", "outcome": "passed", "result": [{"nodeid": "unit/storage/test_backends.py", "type": "Module"}, {"nodeid": "unit/storage/test_factory.py", "type": "Module"}, {"nodeid": "unit/storage/test_manager.py", "type": "Module"}, {"nodeid": "unit/storage/test_migration.py", "type": "Module"}]}, {"nodeid": "unit", "outcome": "passed", "result": [{"nodeid": "unit/adapters", "type": "Dir"}, {"nodeid": "unit/api", "type": "Dir"}, {"nodeid": "unit/character", "type": "Dir"}, {"nodeid": "unit/metrics", "type": "Package"}, {"nodeid": "unit/models", "type": "Dir"}, {"nodeid": "unit/security", "type": "Package"}, {"nodeid": "unit/storage", "type": "Package"}]}, {"nodeid": "utils/test_helpers.py::TestAssertions", "outcome": "passed", "result": []}, {"nodeid": "utils/test_helpers.py", "outcome": "passed", "result": [{"nodeid": "utils/test_helpers.py::TestAssertions", "type": "Class"}]}, {"nodeid": "utils", "outcome": "passed", "result": [{"nodeid": "utils/test_helpers.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "docs", "type": "Dir"}, {"nodeid": "integration", "type": "Dir"}, {"nodeid": "performance", "type": "Dir"}, {"nodeid": "reports", "type": "Dir"}, {"nodeid": "unit", "type": "Dir"}, {"nodeid": "utils", "type": "Dir"}]}], "tests": [], "warnings": [{"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/user.py", "lineno": 602}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/user.py", "lineno": 624}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/user.py", "lineno": 638}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/user.py", "lineno": 659}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/adapters/base/metadata.py", "lineno": 182}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/adapters/base/metadata.py", "lineno": 239}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/adapters/base/metadata.py", "lineno": 322}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`max_items` is deprecated and will be removed, use `max_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/adapter.py", "lineno": 734}, {"message": "`max_items` is deprecated and will be removed, use `max_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/adapter.py", "lineno": 748}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/adapter.py", "lineno": 751}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/adapter.py", "lineno": 785}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/adapter.py", "lineno": 795}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/community.py", "lineno": 685}, {"message": "`max_items` is deprecated and will be removed, use `max_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/community.py", "lineno": 705}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/community.py", "lineno": 714}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/community.py", "lineno": 753}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/community.py", "lineno": 788}, {"message": "`max_items` is deprecated and will be removed, use `max_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/file.py", "lineno": 693}, {"message": "`max_items` is deprecated and will be removed, use `max_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/file.py", "lineno": 715}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/file.py", "lineno": 719}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/file.py", "lineno": 745}, {"message": "`min_items` is deprecated and will be removed, use `min_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/packaging.py", "lineno": 660}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/packaging.py", "lineno": 689}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/opt/zishu-sensei/zishu/models/packaging.py", "lineno": 714}, {"message": "cannot collect test class 'TestEventHandler' because it has a __init__ constructor (from: unit/adapters/test_event_service.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/adapters/test_event_service.py", "lineno": 27}, {"message": "cannot collect test class 'TestValidationRule' because it has a __init__ constructor (from: unit/adapters/test_validation_service.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/adapters/test_validation_service.py", "lineno": 29}, {"message": "cannot collect test class 'TestableChecker' because it has a __init__ constructor (from: unit/api/test_health_routes.py::TestHealthChecker)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/api/test_health_routes.py", "lineno": 122}, {"message": "Unknown pytest.mark.stress - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/api/test_model_routes.py", "lineno": 559}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "Field name \"validate\" in \"AdapterRegistrationRequest\" shadows an attribute in parent \"BaseModel\"", "category": "UserWarning", "when": "collect", "filename": "/opt/zishu-sensei/zishu/api/schemas/adapter.py", "lineno": 637}, {"message": "Field name \"validate\" in \"AdapterUpdateRequest\" shadows an attribute in parent \"BaseModel\"", "category": "UserWarning", "when": "collect", "filename": "/opt/zishu-sensei/zishu/api/schemas/adapter.py", "lineno": 646}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.12/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/data/zishu-sensei/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 319}, {"message": "Unknown pytest.mark.character - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/character/test_character_manager.py", "lineno": 18}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 35}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 94}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 226}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 386}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 426}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 524}, {"message": "Unknown pytest.mark.models - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_character_models.py", "lineno": 680}, {"message": "Unknown pytest.mark.model - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_inference.py", "lineno": 18}, {"message": "Unknown pytest.mark.model - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_inference.py", "lineno": 156}, {"message": "Unknown pytest.mark.model - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_inference.py", "lineno": 222}, {"message": "Unknown pytest.mark.model - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_inference.py", "lineno": 319}, {"message": "Unknown pytest.mark.model - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_inference.py", "lineno": 381}, {"message": "Unknown pytest.mark.model - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/models/test_inference.py", "lineno": 453}, {"message": "Unknown pytest.mark.security - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/security/test_security_service.py", "lineno": 33}, {"message": "Unknown pytest.mark.security - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/security/test_security_service.py", "lineno": 341}, {"message": "Unknown pytest.mark.security - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/opt/zishu-sensei/tests/unit/security/test_security_service.py", "lineno": 416}]}