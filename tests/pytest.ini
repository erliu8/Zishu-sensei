[tool:pytest]
# Pytest配置文件

# 测试发现
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 最小版本要求
minversion = 6.0

# 添加选项
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --color=yes
    --disable-warnings
    --cov=zishu
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml

# 标记定义
markers =
    unit: 单元测试
    integration: 集成测试
    performance: 性能测试
    api: API测试
    core: 核心功能测试
    slow: 慢速测试（执行时间较长）
    gpu: 需要GPU的测试
    network: 需要网络连接的测试
    database: 需要数据库的测试
    redis: 需要Redis的测试
    external: 需要外部服务的测试
    smoke: 冒烟测试
    regression: 回归测试
    security: 安全测试
    load: 负载测试
    stress: 压力测试
    models: 模型相关测试
    system: 系统级测试
    character: 角色相关测试
    model: 模型推理测试
    adapter: 适配器相关测试

# 过滤警告
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    # 忽略特定的第三方库警告
    ignore:.*:pytest.PytestUnraisableExceptionWarning
    ignore:.*:pytest.PytestAsyncioLoopWarning

# 异步测试配置
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 超时配置
timeout = 300
timeout_method = thread

# JUnit XML报告
junit_suite_name = zishu_tests
junit_logging = all
junit_log_passing_tests = true
junit_family = xunit2

# 覆盖率配置
[coverage:run]
source = zishu
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
skip_covered = false
precision = 2

[coverage:html]
directory = htmlcov
title = Zishu Test Coverage Report

[coverage:xml]
output = coverage.xml