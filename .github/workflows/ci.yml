name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-python:
    name: Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Lint with flake8
        run: |
          flake8 zishu/ --count --show-source --statistics
      
      - name: Type check with mypy
        run: |
          mypy zishu/ --ignore-missing-imports
        continue-on-error: true
      
      - name: Test with pytest
        run: |
          pytest tests/ -v --cov=zishu --cov-report=xml --cov-report=html
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: python
          name: python-${{ matrix.python-version }}

  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: community_platform/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./community_platform/frontend
        run: npm ci
      
      - name: Type check
        working-directory: ./community_platform/frontend
        run: npm run type-check
      
      - name: Lint
        working-directory: ./community_platform/frontend
        run: npm run lint
      
      - name: Test
        working-directory: ./community_platform/frontend
        run: npm run test -- --run --coverage
      
      - name: Build
        working-directory: ./community_platform/frontend
        run: npm run build
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./community_platform/frontend/coverage/coverage-final.json
          flags: frontend
          name: frontend

  test-desktop:
    name: Desktop App Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: desktop_app/package-lock.json
      
      - name: Install dependencies
        working-directory: ./desktop_app
        run: npm ci
      
      - name: Type check
        working-directory: ./desktop_app
        run: npm run type-check
      
      - name: Lint
        working-directory: ./desktop_app
        run: npm run lint
      
      - name: Test
        working-directory: ./desktop_app
        run: npm run test -- --run --coverage
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./desktop_app/coverage/coverage-final.json
          flags: desktop
          name: desktop

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        working-directory: ./community_platform/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Lint
        working-directory: ./community_platform/backend
        run: |
          flake8 . --count --show-source --statistics
      
      - name: Test
        working-directory: ./community_platform/backend
        run: |
          pytest tests/ -v --cov=. --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./community_platform/backend/coverage.xml
          flags: backend
          name: backend

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Test community platform build
        working-directory: ./community_platform
        run: |
          docker compose build --no-cache
      
      - name: Test services startup
        working-directory: ./community_platform
        run: |
          docker compose up -d
          sleep 30
          docker compose ps
          docker compose down
