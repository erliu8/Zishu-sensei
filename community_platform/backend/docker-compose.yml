version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: zishu_postgres
    environment:
      POSTGRES_USER: zishu
      POSTGRES_PASSWORD: zishu123
      POSTGRES_DB: zishu_community
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zishu"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zishu_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: zishu_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - zishu_network

  # Qdrant 向量数据库
  qdrant:
    image: qdrant/qdrant:latest
    container_name: zishu_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6333/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - zishu_network

  # 后端 API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      no_cache: false
    container_name: zishu_backend
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=zishu
      - POSTGRES_PASSWORD=zishu123
      - POSTGRES_DB=zishu_community
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_GRPC_PORT=6334
      - QDRANT_COLLECTION_NAME=zishu_posts
      - QDRANT_VECTOR_SIZE=768
    volumes:
      - .:/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - zishu_network

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  zishu_network:
    driver: bridge

